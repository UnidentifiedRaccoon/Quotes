{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/layout/MainNavigation.module.css","components/quotes/QuoteList.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","lib/api.js","hooks/use-http.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","LoadingSpinner","spinner","QuoteForm","authorInputRef","useRef","textInputRef","useState","isFormFocused","setIsFormFocused","when","message","form","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","length","onAddQuote","author","text","isLoading","loading","control","htmlFor","type","id","ref","rows","actions","onClick","FIREBASE_DOMAIN","getAllQuotes","a","fetch","response","json","data","ok","Error","key","transformedQuotes","hasOwnProperty","quoteObj","push","getSingleQuote","quoteId","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj","httpReducer","state","action","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","NewQuote","history","useHistory","useEffect","NewCommentForm","commentTextRef","submitFormHandler","enteredComment","console","log","onAddComment","CommentItem","item","CommentsList","comments","map","comment","Comments","isAddingComment","setIsAddingComment","fetchComments","commentsData","addCommentHandler","HighlightedQuote","quote","QuoteDetail","match","useRouteMatch","useParams","loadedQuote","path","url","exact","href","replace","QuoteItem","to","QuoteList","quotes","isAsc","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","b","sorting","pathname","list","NoQuotesFound","noquotes","AllQuotes","loadingQuotes","MainNavigation","styles","header","logo","nav","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75d142d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2jKoe\",\"loading\":\"QuoteForm_loading__3La39\",\"control\":\"QuoteForm_control__jBqFA\",\"actions\":\"QuoteForm_actions__1MnCu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__ewOzE\",\"loading\":\"NewCommentForm_loading__3TNGX\",\"control\":\"NewCommentForm_control__6m8hi\",\"actions\":\"NewCommentForm_actions__3zWSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__15A-6\",\"logo\":\"MainNavigation_logo__3NWGo\",\"nav\":\"MainNavigation_nav__39JLd\",\"active\":\"MainNavigation_active__25Olz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__11X4g\",\"sorting\":\"QuoteList_sorting__1JXN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__TL2u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2MMaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3i9Le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2eBSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__OQ88U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__ka7-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2H4Y7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3VUl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3K_5x\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner} />;\n};\n\nexport default LoadingSpinner;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isFormFocused, setIsFormFocused] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    if (enteredAuthor.length < 5) {\n      setIsFormFocused(true);\n      return;\n    }\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsFormFocused(true);\n  };\n\n  const unShowPromptHandler = () => {\n    setIsFormFocused(false);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isFormFocused}\n        message=\"If you leave this page all entered data would be lost\"\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onFocus={formFocusHandler}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef} />\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={unShowPromptHandler}>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","const FIREBASE_DOMAIN =\n  \"https://quotes-a1bbe-default-rtdb.europe-west1.firebasedatabase.app/\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    if (data.hasOwnProperty(key)) {\n      const quoteObj = {\n        id: key,\n        ...data[key],\n      };\n\n      transformedQuotes.push(quoteObj);\n    }\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  return {\n    id: quoteId,\n    ...data,\n  };\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    if (data.hasOwnProperty(key)) {\n      const commentObj = {\n        id: key,\n        text: data[key],\n      };\n      transformedComments.push(commentObj);\n    }\n  }\n\n  return transformedComments;\n}\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\nimport { useHistory } from \"react-router-dom\";\nimport { addQuote } from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect } from \"react\";\n\nconst NewQuote = () => {\n  const history = useHistory();\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\" && !status.error) {\n      history.push(\"/quotes\");\n    } else {\n      // Отображение сообщения об ошибке при отправке данных (можно исп useState)\n    }\n  }, [status, history]);\n  const addNewQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  return (\n    <section>\n      <h1>NewQuote</h1>\n      <QuoteForm\n        onAddQuote={addNewQuoteHandler}\n        isLoading={status === \"pending\"}\n      />\n    </section>\n  );\n};\n\nexport default NewQuote;\n","import { useEffect, useRef } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredComment = commentTextRef.current.value;\n    console.log(props.quoteId);\n    sendRequest({\n      commentData: enteredComment,\n      quoteId: props.quoteId,\n    });\n  };\n  const { onAddComment } = props;\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef} />\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport CommentsList from \"./CommentsList\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst Comments = (props) => {\n  const { quoteId } = props;\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest: fetchComments,\n    status,\n    data: commentsData,\n  } = useHttp(getAllComments);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    fetchComments(quoteId);\n  }, [fetchComments, quoteId]);\n\n  const addCommentHandler = useCallback(() => {\n    fetchComments(quoteId);\n  }, [fetchComments, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (!commentsData || commentsData.length === 0)) {\n    comments = <p className=\"centered\">No comments added yet</p>;\n  }\n\n  if (status === \"completed\" && commentsData.length > 0) {\n    console.log(commentsData);\n    comments = <CommentsList comments={commentsData} />;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onAddComment={addCommentHandler} quoteId={quoteId} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Route, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { useEffect } from \"react\";\n\nconst QuoteDetail = () => {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedQuote,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const loadCommentsHandler = (event) => {\n    event.preventDefault();\n    history.replace(`${match.url}/comments`);\n  };\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quotes founded</p>;\n  }\n  return (\n    <section>\n      <HighlightedQuote\n        text={loadedQuote.text}\n        author={loadedQuote.author}\n        key={loadedQuote.id}\n      />\n      <Route path={`${match.url}`} exact>\n        <div className=\"centered\">\n          <a\n            className=\"btn-flat\"\n            href={`${match.url}/comments`}\n            onClick={loadCommentsHandler}\n          >\n            Load comments\n          </a>\n        </div>\n      </Route>\n      <Route path={`${match.url}/comments`}>\n        <Comments quoteId={quoteId} />\n      </Route>\n    </section>\n  );\n};\n\nexport default QuoteDetail;\n","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst sort = (quotes, isAsc) => {\n  return quotes.sort((a, b) => {\n    if (isAsc) {\n      return a.id > b.id ? 1 : -1;\n    } else {\n      return a.id < b.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sort(props.quotes, isAscending);\n\n  const clickSortHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n  return (\n    <>\n      <div className={classes.sorting}>\n        <button onClick={clickSortHandler}>\n          Sort {isAscending ? \"descending\" : \"ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default QuoteList;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadingQuotes,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadingQuotes || loadingQuotes.length === 0)\n  ) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <section>\n      <h1>Quotes</h1>\n      <QuoteList quotes={loadingQuotes} />\n    </section>\n  );\n};\n\nexport default AllQuotes;\n","import styles from \"./MainNavigation.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.logo}>Great quotes</div>\n      <nav className={styles.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\">All Quotes</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\">Add Quote</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import styles from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={styles.main}>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page not found</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}